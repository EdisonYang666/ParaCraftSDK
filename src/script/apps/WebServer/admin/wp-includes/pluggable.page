<?npl
--[[
Title: 
Author: leio
Date: 2016/3/7
Desc: 
]]


function wp_authenticate(username,password)
	local user = apply_filters( 'authenticate', nil, username, password );
	if(not user)then
		user = WP_Error:new():init('authentication_failed', ('<strong>ERROR</strong>: Invalid username or incorrect password.'));
	end
	local ignore_codes = {'empty_username', 'empty_password'};
	if(is_wp_error(user) and (not in_array(user:get_error_code(), ignore_codes)))then
		do_action( 'wp_login_failed', username );
	end
	return user;
end
function get_user_by(field, value )
	local userdata = WP_User.get_data_by( field, value );
	if(not userdata)then
		return false;
	end
	local user = WP_User:new()
	user:init(userdata);
	return user;
end
function wp_check_password(password, hash, user_id)
	local password_hash = ParaMisc.md5(password);
	if(password_hash == hash)then
		return true;
	end
end
function wp_set_auth_cookie(user_id, remember, secure, token)
	local expiration;
	local expire;
	if(remember)then
		expiration = ParaGlobal.timeGetTime() + 14 * DAY_IN_SECONDS;
		expire = expiration + ( 12 * HOUR_IN_SECONDS );
	else
		expiration = ParaGlobal.timeGetTime() + 2 * DAY_IN_SECONDS;
		expire = 0;
		end
	local auth_cookie_name = AUTH_COOKIE;
	local scheme = "auth";
	if(token == "")then
	    local manager = WP_Session_Tokens.get_instance( user_id );
	    token   = manager:create( expiration ); 
	end
	local auth_cookie = wp_generate_auth_cookie( user_id, expiration, scheme, token );
	local logged_in_cookie = wp_generate_auth_cookie( user_id, expiration, 'logged_in', token );
    response:set_cookie(auth_cookie_name,auth_cookie);
    response:set_cookie(LOGGED_IN_COOKIE,logged_in_cookie);
end
function wp_generate_password( length , special_chars , extra_special_chars)
    length = length or 12;
	local chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
	if ( special_chars )then
	    chars = chars .. '!@#$%^&*()';
    end
	if ( extra_special_chars ) then
	    chars = chars  .. '-_ []{}<>~`+=,.;:/?|';
    end
	local password = '';
	local i;
	for i = 1,length do
        local index = math.random(string.len(chars));
	    password = password .. string.sub(chars, index, index+1);
    end
    return password;
end
function wp_generate_auth_cookie( user_id, expiration, scheme , token)
    scheme = scheme or "auth";
    token = token or "";
    local user = get_userdata(user_id);
    if(not user)then
        return "";
    end
    if(token == "")then
	    local manager = WP_Session_Tokens.get_instance( user_id );
	    token   = manager:create( expiration ); 
    end
    local pass_frag = string.sub(user.data.user_pass, 8, 8+4);
    local key = wp_hash( user.data.user_login .. '|' .. pass_frag .. '|' .. expiration .. '|' .. token, scheme );
    local algo = 'sha1';
    local hash = hash_hmac( algo, user.data.user_login .. '|' .. expiration .. '|' .. token, key );

	local cookie = user.data.user_login .. '|' .. expiration .. '|' .. token .. '|' .. hash;
    return cookie;
end

function wp_hash(data, scheme) 
    scheme = scheme or 'auth';
    return data;
end
function hash_hmac(algo, data, key, raw_output) 
    return data;
end